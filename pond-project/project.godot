; Engine configuration file.
; It's best edited using the editor UI and not directly,
; since the parameters that go here are not all obvious.
;
; Format:
;   [section] ; section goes between []
;   param=value ; assign values to parameters

config_version=4

_global_script_classes=[ {
"base": "KinematicBody2D",
"class": "Duck",
"language": "GDScript",
"path": "res://DuckScript.gd"
}, {
"base": "Control",
"class": "EnergyBar",
"language": "GDScript",
"path": "res://EnergyBarScript.gd"
}, {
"base": "Reference",
"class": "ExceptionHandler",
"language": "GDScript",
"path": "res://src/Delegates/ExceptionHandler.gd"
}, {
"base": "Reference",
"class": "NakamaAPI",
"language": "GDScript",
"path": "res://addons/com.heroiclabs.nakama/api/NakamaAPI.gd"
}, {
"base": "Reference",
"class": "NakamaAsyncResult",
"language": "GDScript",
"path": "res://addons/com.heroiclabs.nakama/utils/NakamaAsyncResult.gd"
}, {
"base": "Reference",
"class": "NakamaClient",
"language": "GDScript",
"path": "res://addons/com.heroiclabs.nakama/client/NakamaClient.gd"
}, {
"base": "Reference",
"class": "NakamaException",
"language": "GDScript",
"path": "res://addons/com.heroiclabs.nakama/utils/NakamaException.gd"
}, {
"base": "Node",
"class": "NakamaHTTPAdapter",
"language": "GDScript",
"path": "res://addons/com.heroiclabs.nakama/client/NakamaHTTPAdapter.gd"
}, {
"base": "Reference",
"class": "NakamaLogger",
"language": "GDScript",
"path": "res://addons/com.heroiclabs.nakama/utils/NakamaLogger.gd"
}, {
"base": "NakamaAsyncResult",
"class": "NakamaRTAPI",
"language": "GDScript",
"path": "res://addons/com.heroiclabs.nakama/api/NakamaRTAPI.gd"
}, {
"base": "Reference",
"class": "NakamaRTMessage",
"language": "GDScript",
"path": "res://addons/com.heroiclabs.nakama/api/NakamaRTMessage.gd"
}, {
"base": "Reference",
"class": "NakamaSerializer",
"language": "GDScript",
"path": "res://addons/com.heroiclabs.nakama/utils/NakamaSerializer.gd"
}, {
"base": "NakamaAsyncResult",
"class": "NakamaSession",
"language": "GDScript",
"path": "res://addons/com.heroiclabs.nakama/api/NakamaSession.gd"
}, {
"base": "Reference",
"class": "NakamaSocket",
"language": "GDScript",
"path": "res://addons/com.heroiclabs.nakama/socket/NakamaSocket.gd"
}, {
"base": "Node",
"class": "NakamaSocketAdapter",
"language": "GDScript",
"path": "res://addons/com.heroiclabs.nakama/socket/NakamaSocketAdapter.gd"
}, {
"base": "Reference",
"class": "NakamaStorageObjectId",
"language": "GDScript",
"path": "res://addons/com.heroiclabs.nakama/api/NakamaStorageObjectId.gd"
}, {
"base": "Reference",
"class": "NakamaWriteStorageObject",
"language": "GDScript",
"path": "res://addons/com.heroiclabs.nakama/api/NakamaWriteStorageObject.gd"
}, {
"base": "HBoxContainer",
"class": "PondMatch",
"language": "GDScript",
"path": "res://PondMatchScript.gd"
}, {
"base": "Node2D",
"class": "Projectile",
"language": "GDScript",
"path": "res://ProjectileScript.gd"
}, {
"base": "Button",
"class": "RunResetButton",
"language": "GDScript",
"path": "res://RunResetButtonScript.gd"
} ]
_global_script_class_icons={
"Duck": "",
"EnergyBar": "",
"ExceptionHandler": "",
"NakamaAPI": "",
"NakamaAsyncResult": "",
"NakamaClient": "",
"NakamaException": "",
"NakamaHTTPAdapter": "",
"NakamaLogger": "",
"NakamaRTAPI": "",
"NakamaRTMessage": "",
"NakamaSerializer": "",
"NakamaSession": "",
"NakamaSocket": "",
"NakamaSocketAdapter": "",
"NakamaStorageObjectId": "",
"NakamaWriteStorageObject": "",
"PondMatch": "",
"Projectile": "",
"RunResetButton": ""
}

[application]

config/name="Pond-project"
run/main_scene="res://PondMatch.tscn"
config/icon="res://icon.png"

[autoload]

PlayerData="*res://PlayerDataScript.gd"
ThreadSincronizer="*res://ThreadSincronizerScript.gd"
CurrentVisualization="*res://CurrentVisualizationScript.gd"
Nakama="*res://addons/com.heroiclabs.nakama/Nakama.gd"
ServerConnection="*res://src/Autoload/ServerConnection.gd"

[debug]

settings/fps/force_fps=30

[global]

collision=false

[layer_names]

2d_physics/layer_1="duck-body"
2d_physics/layer_2="wall"

[physics]

common/physics_fps=30
common/enable_pause_aware_picking=true

[rendering]

environment/default_environment="res://default_env.tres"
